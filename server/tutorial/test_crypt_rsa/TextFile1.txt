

간단한(? ) 원리를 이용하면서도 안전성이 높아 ...
(정확히 말하면 계산학적으로 풀기 어려운게 아니라 ... 시간적으로 오래 걸리기 때문에)
현재 널리 사용되고 있습니다 ...
사용되는 용도는 .... ... 현대인이라면 누구나 하나쯤 가지고 있다는 그 ... 공인인증서 !...
(은행 인터넷 뱅킹 페이지 등에 가시면 ... 본 사이트는 RSA 2048bit 으로 암호화 되어있습니다 와 같은 문구를 보실 수 있습니다)



여러가지 배경은 여기까지로 압축 하기로 하고,
본격적으로 알고리즘은 다음과 같습니다.

//▷ 키 생성
//- 두 개의 큰 소수 p와 q를 선택하고, 이들의 곱 n = pq를 계산한다.
//- φ(n) = (p - 1)(q - 1)
//- n과 서로소인 e를 선택하고 de = 1mod φ(n) 를 만족하는 수 d를 계산한다.
//- (n, e)는 공개키로 공개하고, d는 개인키로 보관한다.

//▷ 암호화
//- 메시지 m을 공개키(n, e)를 이용하여 c = m^e·mod n 로 암호화 한다.
//
//▷ 복호화
//- 암호문 c를 자신의 비밀키 d를 이용하여 m = c^d·mod n 으로 복호화 한다.


그럼 RSA의 간단한 예를 들어보도록 하겠습니다.

▶ 키 생성
p = 2357, q = 2551, n = pq = 6012707
φ(n) = (p - 1)(q - 1) = 6007800
e = 36749911 로 결정하면 유클리드 알고리즘을 이용하여 d = 422191로 구할 수 있습니다.
여기서 n과 e 즉, 6012707과 36749911을 공개하고, d = 422191을 개인키로 보관합니다.

▶ 암호화
메시지 m = 5234673 이라면
암호문  c = m^e·mod n = 5234673 ^ 3674911 mod 6012707 = 3650502
즉, 메시지 m = 5234673을 공개키 n과 e를 이용하여 암호화 하면 암호문 c = 3650502를 얻습니다.

▶ 복호화
메시지 m = c^d·mod n = 3650502 ^ 422191 mod 6012707 = 5234673
암호문 c = 3650502를 개인키 d를 이용하여 복호화 하면 원래의 메시지 m = 5234673을 얻을 수 있습니다.

Reference
[1] 한국전자통신연구원, "암호학의 기초", 1999